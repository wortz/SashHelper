{"version":3,"sources":["StaticValues/WeaponBonuses.js","Components/Elements/Bonus.js","Components/Elements/Level.js","StaticValues/WeaponsValues.js","Components/Elements/Weapons.js","Components/Elements/Sash.js","Components/Objects/FinalValues.js","Components/Objects/SashCalculator.js","App.js","index.js"],"names":["bonuses","RenderBonus","props","bonusesOption","forEach","element","push","key","value","className","bonus","map","item","i","name","onChange","e","type","placeholder","bonus1","onClick","addBonus","RenderLevel","items","WeaponsValues","src","values","minAttValue","maxAttValue","attSpeed","halfhuman","monsters","Weapons","alt","RenderSashPercentage","sashPercentage","FinalValues","state","calculateValues","bind","calculateValue","this","setState","percentage","newValue","Math","floor","original","a","console","log","data-th","React","Component","SashCalculator","wrapper","createRef","weapon","itemlevel","showFinal","changePercentage","handleChange","changeLevel","changeWeapon","calculateBonus","event","temp","target","index","firstBonus","parseInt","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0fbf76a.chunk.js","sourcesContent":["const bonuses=[\r\n    \"Average Damage\",\r\n    \"Skill Damage\",\r\n    \"Devils\",\r\n    \"Undead\",\r\n    \"Animals\",\r\n    \"Orcs\",\r\n    \"Half-Human\",\r\n    \"Mystic\",\r\n    \"Intelligence\",\r\n    \"Strength\",\r\n    \"Agility\",\r\n    \"Vitality\",\r\n    \"Piercing Hit\",\r\n    \"Critical Hit\",\r\n    \"Poison Chance\",\r\n    \"Blackout Chance\",\r\n    \"Bleeding Attack\",\r\n    \"Slowing Chance\",\r\n    \"Spell Speed\",\r\n];\r\n\r\nexport default bonuses;\r\n","import React from 'react';\r\nimport bonuses from '../../StaticValues/WeaponBonuses'\r\n\r\nfunction RenderBonus(props){\r\n  const bonusesOption = []\r\n  bonuses.forEach(element => {\r\n    bonusesOption.push(<option key={element} value={element}>{element}</option>)\r\n  });\r\n  return (\r\n    <div className=\"Bonuses\">\r\n      {props.bonus.map((item,i) => (\r\n      <div className=\"SingleBonus\" key={i}>\r\n        <select name=\"bonuses\" onChange={e => props.onChange(e,i,0)}>\r\n          {bonusesOption}\r\n        </select>\r\n        <input type=\"text\" placeholder=\"Valor do Bonus\" value={item.bonus1} onChange={e => props.onChange(e,i,1)} />\r\n      </div>\r\n    ))}\r\n      <button onClick={() => props.addBonus(bonuses[0])}>\r\n        New Bonus\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default RenderBonus;\r\n","import React from 'react';\r\n\r\nfunction RenderLevel(props){\r\n    const items = []\r\n    for (let i=9;i>5;i--)\r\n    items.push(<option key={i} value={i}>{\"+\" + i}</option>)\r\n    return(\r\n        <select className=\"itemLevel\" onChange={props.onChange}>\r\n            {items}\r\n        </select>\r\n    );\r\n}\r\nexport default RenderLevel;","const WeaponsValues = [\r\n    {   name: \"Zodiac Bow\",\r\n        src: \"https://en-wiki.metin2.gameforge.com/images/7/7e/Zodiac_Bow.png\",\r\n        values: [\r\n            {\r\n                minAttValue:311,\r\n                maxAttValue:510,\r\n                attSpeed:24,\r\n            },\r\n            {\r\n                minAttValue:348,\r\n                maxAttValue:547,\r\n                attSpeed:25,\r\n            },\r\n            {\r\n                minAttValue:404,\r\n                maxAttValue:603,\r\n                attSpeed:26,\r\n            },\r\n            {\r\n                minAttValue:487,\r\n                maxAttValue:686,\r\n                attSpeed:27,\r\n            },\r\n        ]\r\n    },\r\n    {   name: \"Phoenix Bow\",\r\n        src: \"https://en-wiki.metin2.gameforge.com/images/0/09/Phoenix_Bow.png\",\r\n        values: [\r\n            {\r\n                minAttValue:311,\r\n                maxAttValue:510,\r\n                attSpeed:24,\r\n                halfhuman:8,\r\n                monsters:4\r\n            },\r\n            {\r\n                minAttValue:348,\r\n                maxAttValue:547,\r\n                attSpeed:25,\r\n                halfhuman:10,\r\n                monsters:4\r\n            },\r\n            {\r\n                minAttValue:404,\r\n                maxAttValue:603,\r\n                attSpeed:26,\r\n                halfhuman:12,\r\n                monsters:5\r\n            },\r\n            {\r\n                minAttValue:487,\r\n                maxAttValue:686,\r\n                attSpeed:27,\r\n                halfhuman:15,\r\n                monsters:5\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\nexport default WeaponsValues;\r\n","import React from 'react';\r\nimport WeaponsValues from '../../StaticValues/WeaponsValues'\r\n\r\n\r\nfunction Weapons(props){\r\n    return(\r\n        <div className=\"weapondiv\">\r\n            {WeaponsValues.map(item => (\r\n            <label key={item.name}>\r\n                <input type=\"radio\" className=\"weapon\" name=\"weapon\" value={item.name} onChange={props.onChange}/>\r\n                <img \r\n                className=\"weaponimg\"\r\n                src={item.src} \r\n                alt={item.name}\r\n                />\r\n                {item.name}\r\n            </label>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weapons;","import React from 'react';\r\n\r\nfunction RenderSashPercentage(props) {\r\n    return(\r\n        <div className=\"SashPercentage\">\r\n            <img \r\n                className=\"sashimg\"\r\n                src=\"https://en-wiki.metin2.gameforge.com/images/5/50/Yin_Sash_%28custom%29.png\" \r\n                alt=\"Sash Icon\"\r\n            />\r\n            <input type=\"text\" placeholder=\"Sash Percentage\" value={props.sashPercentage} onChange={props.onChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RenderSashPercentage;","import React from 'react';\r\n\r\n\r\nclass FinalValues extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            bonus:this.calculateValues(),\r\n        };\r\n        this.calculateValues =this.calculateValues.bind(this);\r\n        this.calculateValue =this.calculateValue.bind(this);\r\n    };\r\n\r\n    componentWillReceiveProps() {\r\n        this.setState({bonus:this.calculateValues()});\r\n    }\r\n\r\n    calculateValue(element, percentage) {\r\n        let newValue = 0;\r\n        if(element.bonus > 0){\r\n          newValue = Math.floor(percentage * element.bonus / 100.0);\r\n          if(newValue===0)\r\n            newValue++;\r\n        }\r\n        return newValue;\r\n    }\r\n\r\n    calculateValues() {\r\n        const bonus = this.props.original.bonus.map(a => ({...a}));\r\n        this.props.original.bonus.forEach((element,i) => {\r\n            bonus[i].bonus=this.calculateValue(element, this.props.original.sashPercentage);\r\n        });\r\n        return bonus;\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(\"re\");\r\n        return (\r\n            <div className=\"FinalValues\">\r\n                <table className=\"rwd-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Bonus</th>\r\n                            <th>Sash Value</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.bonus.map((element,i) => (\r\n                        <tr key={i}>\r\n                            <td data-th=\"Bonus\">{element.name}</td>\r\n                            <td data-th=\"FinalValue\">{element.bonus}</td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n          </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default FinalValues;","import React from 'react';\r\nimport RenderBonus from '../Elements/Bonus'\r\nimport RenderLevel from '../Elements/Level'\r\nimport Weapons from '../Elements/Weapons'\r\nimport RenderSashPercentage from '../Elements/Sash';\r\nimport FinalValues from './FinalValues'\r\n\r\nclass SashCalculator extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.wrapper = React.createRef();\r\n        this.state={\r\n            sashPercentage: \"\",\r\n            weapon:\"\",\r\n            itemlevel:9,\r\n            bonus:[],\r\n            showFinal:false,\r\n        }\r\n        this.changePercentage =this.changePercentage.bind(this);\r\n        this.handleChange =this.handleChange.bind(this);\r\n        this.addBonus =this.addBonus.bind(this);\r\n        this.changeLevel =this.changeLevel.bind(this);\r\n        this.changeWeapon =this.changeWeapon.bind(this);\r\n        this.calculateBonus =this.calculateBonus.bind(this);\r\n    }\r\n\r\n    changePercentage(event) {\r\n        let temp = this.state.sashPercentage;\r\n        temp = event.target.value;\r\n        this.setState({sashPercentage:temp});\r\n    }\r\n\r\n    handleChange(event, index, bonus) {\r\n        const temp = this.state.bonus.map(a => ({...a}));\r\n        if(bonus)\r\n          temp[index].bonus=event.target.value;\r\n        else\r\n          temp[index].name=event.target.value;\r\n        this.setState({bonus:temp});\r\n    }\r\n    \r\n    addBonus(firstBonus){\r\n          const temp = this.state.bonus.map(a => ({...a}));\r\n          temp.push({name:firstBonus,bonus:0,});\r\n          this.setState({bonus:temp});\r\n    }\r\n    \r\n    changeLevel (event) {\r\n        let temp = this.state.itemlevel;\r\n        temp=parseInt(event.target.value);\r\n        this.setState({itemlevel:temp});\r\n    }\r\n    \r\n    changeWeapon (event) {\r\n        let temp = this.state.weapon;\r\n        temp=event.target.value;\r\n        this.setState({weapon:temp});\r\n    }\r\n\r\n    calculateBonus(){\r\n      this.setState({showFinal:true});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <div className=\"SashCalculator\">\r\n              <RenderSashPercentage sashPercentage={this.state.sashPercentage} onChange={this.changePercentage}/>\r\n              <Weapons onChange={this.changeWeapon}/>\r\n              <RenderLevel onChange={this.changeLevel} />\r\n              <RenderBonus bonus={this.state.bonus} onChange={this.handleChange} addBonus={this.addBonus} />\r\n              <button onClick={this.calculateBonus}>\r\n                Calculate Final Values\r\n              </button>\r\n              {this.state.showFinal &&\r\n              <FinalValues original={this.state} />\r\n              }\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default SashCalculator;","import React from 'react';\r\nimport './style.css';\r\nimport SashCalculator from './Components/Objects/SashCalculator'\r\n\r\nfunction App() {\r\n    return (\r\n      <div className=\"App\">\r\n          <SashCalculator />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}